"""
Django settings for classifiedads project.

Generated by 'django-admin startproject' using Django 2.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from django.core.exceptions import ImproperlyConfigured
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Get environment variables or provide defaults
def get_env_variable(var_name, default=None):
    try:
        value = os.getenv(var_name)
        if value is None and default is not None:
            return default
        if value is None:
            raise ImproperlyConfigured(f"Set the {var_name} environment variable")
        return value
    except KeyError:
        if default is not None:
            return default
        raise ImproperlyConfigured(f"Set the {var_name} environment variable")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env_variable('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Added these headers for development
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOW_CREDENTIALS = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '*',  # Remove this in production and add your actual domain
]

# Cache settings
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    # My apps
    'pages',
    'ads',
    'ads.templatetags',  # Added this line to include custom template tags
    'profiles',
    'authentication.apps.AuthenticationConfig',
    'payments',  # Added payments app
    # Packages
    'crispy_forms',  # Added crispy_forms
    'ckeditor',
    'core',
    'debug_toolbar',
    'embed_video',
]

# Add SITE_ID after INSTALLED_APPS
SITE_ID = 1

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # ... other middleware ...
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'profiles.middleware.LastSeenMiddleware',
]

ROOT_URLCONF = 'classifiedads.urls'

# Google Maps API Key
GOOGLE_MAPS_API_KEY = 'your_google_maps_api_key_here'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'pages.context_processors.footer_recent_ads',
                'ads.context_processors.unread_messages',
                'classifiedads.context_processors.google_maps_api_key',  # Updated path
            ],
        },
    },
]

WSGI_APPLICATION = 'classifiedads.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

"""PostgreSQL DB"""
# DATABASES = {
#     'default': {
#         'NAME': 'ClassifiedAdsDB',
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'USER': 'postgres',
#         'PASSWORD': 'admin123',
#         'HOST': 'localhost',
#     }
# }

"""SQLite DB"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'GMT'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

if not DEBUG:
    # Simplified static file serving
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
    MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')
else:
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Add these if you don't have them
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Create required media directories
os.makedirs(os.path.join(MEDIA_ROOT, 'profile_pictures'), exist_ok=True)
os.makedirs(os.path.join(MEDIA_ROOT, 'default'), exist_ok=True)

os.makedirs(os.path.join(MEDIA_ROOT, 'temp'), exist_ok=True)

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
SESSION_COOKIE_SECURE = False  # Set to True only in production with HTTPS
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'  # Prevents CSRF in modern browsers

# Use standard static files storage in development
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Security settings for production
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True

# Security Settings - simplified for development
if DEBUG:
    # Disable all HTTPS/SSL related settings in development
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_BROWSER_XSS_FILTER = False
    SECURE_CONTENT_TYPE_NOSNIFF = False
    SECURE_HSTS_SECONDS = 0
    SECURE_HSTS_INCLUDE_SUBDOMAINS = False
    SECURE_HSTS_PRELOAD = False
    SECURE_PROXY_SSL_HEADER = None
    USE_X_FORWARDED_HOST = False
    USE_X_FORWARDED_PORT = False
    
    # Remove any HTTPS-related middleware
    MIDDLEWARE = [m for m in MIDDLEWARE if not m.startswith('django.middleware.security')]
    MIDDLEWARE.append('django.middleware.security.SecurityMiddleware')

# Remove or comment out these lines completely
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# USE_X_FORWARDED_HOST = True
# USE_X_FORWARDED_PORT = True

# Ensure this is after all other settings
if not DEBUG:
    # Use whitenoise for static files in production
    MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source']
        ],
        'height': 'auto',
        'width': 'auto',
        'allowedContent': 'p b strong i em u ul ol li',  # Only allow these basic elements
        'forcePasteAsPlainText': True,
        'removeFormatTags': 'h1 h2 h3 h4 h5 h6 div span',
        'removeFormatAttributes': '*',
        'format_tags': 'p',  # Only allow paragraphs
    },

    'advanced': {
        'skin': 'moono-lisa',
        'toolbar': 'Full',
        'height': 300,
        'width': '100%',
        'filebrowserWindowWidth': 940,
        'filebrowserWindowHeight': 725,
        'removePlugins': 'stylesheetparser',
        'allowedContent': False,  # Disable all HTML elements by default
        'extraPlugins': 'justify,colorbutton,colordialog,smiley',
        'contentsCss': [
            '/static/css/ckeditor-content.css'
        ],
        'forcePasteAsPlainText': True,
        'removeFormatAttributes': 'class,style,lang,width,height,align,hspace,valign',
    },

    'restricted': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList'],
            ['FontSize'],
            ['TextColor'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight'],
            ['RemoveFormat'],
        ],
        'height': 300,
        'width': '100%',
        'removePlugins': 'stylesheetparser,uploadimage,uploadfile,image',
        'allowedContent': {
            # Only allow specific elements with specific attributes
            'p': {
                'styles': 'text-align',
                'attributes': False,
                'classes': False
            },
            'strong': True,
            'em': True,
            'u': True,
            'ol': True,
            'ul': True,
            'li': True,
        },
        'forcePasteAsPlainText': True,
        'removeButtons': 'Source,Image,Strike,Subscript,Superscript,Anchor,Table',
        'removeFormatAttributes': 'class,style,lang,width,height,align,hspace,valign',
        'pasteFilter': {
            'keepZeroMargins': False,
            'removeFontStyles': True,
            'removeStyles': True,
            'removeEmptyBoundaryParagraphs': True
        },
    }
}

# Crispy Forms Settings
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'mpesa.log',
        },
    },
    'loggers': {
        'authentication': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
        'payments': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
        },
    },
}

# Site Configuration
SITE_ID = 1
if DEBUG:
    DOMAIN = ['localhost:8000', '127.0.0.1:8000']  # Development domains
else:
    DOMAIN = 'yourdomain.com'  # Production domain (change this when you deploy)

    
# Email settings
EMAIL_USE_TLS = True  
EMAIL_HOST = 'smtp.gmail.com'  
EMAIL_HOST_USER = 'celynekydd@gmail.com'  
EMAIL_HOST_PASSWORD = 'kqtw mbmj tpyx fisu'
EMAIL_PORT = 587

# Daraja API Settings
MPESA_ENVIRONMENT = 'sandbox'  # Change to 'production' in production
MPESA_CONSUMER_KEY = '02bdhSdIbeQhL9gc7AfdCiduQFQdI3LCeijEswTJ9e0Tu7RG'  # Your consumer key
MPESA_CONSUMER_SECRET = 'SBC7GAEqqeXN3wLSWgRN5RuMFilPXBZwlpM5VNctUykpdhWnIu0hT3pCQKDWoZEp'  # Your consumer secret
MPESA_SHORTCODE = '174379'  # Your shortcode
MPESA_EXPRESS_SHORTCODE = '174379'  # Your Lipa Na MPesa Online Shortcode
MPESA_PASSKEY = 'bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919'  # Your LNM Passkey
MPESA_INITIATOR_NAME = 'testapi'  # Optional: For B2C/B2B APIs
MPESA_INITIATOR_PASSWORD = 'Safaricom999!*!'  # Optional: For B2C/B2B APIs

# Callback base URL for MPesa endpoints - Change in production
CALLBACK_DOMAIN = 'https://e7dd-197-237-53-119.ngrok-free.app'
MPESA_CALLBACK_URL = f'{CALLBACK_DOMAIN}/payments/mpesa-callback/'

# Optional: B2C/B2B additional configuration
B2C_SECURITY_CREDENTIAL = 'your_security_credential'  # Optional: For B2C transactions
B2B_SECURITY_CREDENTIAL = 'your_security_credential'  # Optional: For B2B transactions